// Code generated by protoc-gen-go.
// source: types.proto
// DO NOT EDIT!

package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UpdateStatus_UpdateState int32

const (
	UpdateStatus_UNKNOWN   UpdateStatus_UpdateState = 0
	UpdateStatus_UPDATING  UpdateStatus_UpdateState = 1
	UpdateStatus_PAUSED    UpdateStatus_UpdateState = 2
	UpdateStatus_COMPLETED UpdateStatus_UpdateState = 3
)

var UpdateStatus_UpdateState_name = map[int32]string{
	0: "UNKNOWN",
	1: "UPDATING",
	2: "PAUSED",
	3: "COMPLETED",
}
var UpdateStatus_UpdateState_value = map[string]int32{
	"UNKNOWN":   0,
	"UPDATING":  1,
	"PAUSED":    2,
	"COMPLETED": 3,
}

func (x UpdateStatus_UpdateState) String() string {
	return proto.EnumName(UpdateStatus_UpdateState_name, int32(x))
}
func (UpdateStatus_UpdateState) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 0} }

type UpdateStatus struct {
	// State is the state of this update. It indicates whether the
	// update is in progress, completed, or is paused.
	State   UpdateStatus_UpdateState `protobuf:"varint,1,opt,name=state,enum=api.UpdateStatus_UpdateState" json:"state,omitempty"`
	Message string                   `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
}

func (m *UpdateStatus) Reset()                    { *m = UpdateStatus{} }
func (m *UpdateStatus) String() string            { return proto.CompactTextString(m) }
func (*UpdateStatus) ProtoMessage()               {}
func (*UpdateStatus) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func init() {
	proto.RegisterType((*UpdateStatus)(nil), "api.UpdateStatus")
	proto.RegisterEnum("api.UpdateStatus_UpdateState", UpdateStatus_UpdateState_name, UpdateStatus_UpdateState_value)
}

func init() { proto.RegisterFile("types.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 174 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0xa9, 0x2c, 0x48,
	0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x5a, 0xc4, 0xc8,
	0xc5, 0x13, 0x5a, 0x90, 0x92, 0x58, 0x92, 0x1a, 0x5c, 0x92, 0x58, 0x52, 0x5a, 0x2c, 0x64, 0xcc,
	0xc5, 0x5a, 0x5c, 0x92, 0x58, 0x92, 0x2a, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x67, 0x24, 0xab, 0x97,
	0x58, 0x90, 0xa9, 0x87, 0xac, 0x02, 0x89, 0x93, 0x1a, 0x04, 0x51, 0x2b, 0x24, 0xc1, 0xc5, 0x9e,
	0x9b, 0x5a, 0x5c, 0x9c, 0x98, 0x9e, 0x2a, 0xc1, 0xa2, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe3, 0x2a,
	0x39, 0x73, 0x71, 0x23, 0xa9, 0x17, 0xe2, 0xe6, 0x62, 0x0f, 0xf5, 0xf3, 0xf6, 0xf3, 0x0f, 0xf7,
	0x13, 0x60, 0x10, 0xe2, 0xe1, 0xe2, 0x08, 0x0d, 0x70, 0x71, 0x0c, 0xf1, 0xf4, 0x73, 0x17, 0x60,
	0x14, 0xe2, 0xe2, 0x62, 0x0b, 0x70, 0x0c, 0x0d, 0x76, 0x75, 0x11, 0x60, 0x12, 0xe2, 0xe5, 0xe2,
	0x74, 0xf6, 0xf7, 0x0d, 0xf0, 0x71, 0x0d, 0x71, 0x75, 0x11, 0x60, 0x4e, 0x62, 0x03, 0x3b, 0xd8,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x5e, 0xfc, 0x69, 0xe7, 0xbf, 0x00, 0x00, 0x00,
}
